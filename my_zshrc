setopt correct

# Use Emacs keybinds
bindkey -e

PS1='%2~> '

# git theming default: Variables for theming the git info prompt
ZSH_THEME_GIT_PROMPT_PREFIX="git:("         # Prefix at the very beginning of the prompt, before the branch name
ZSH_THEME_GIT_PROMPT_SUFFIX=")"             # At the very end of the prompt

for color in RED GREEN YELLOW BLUE MAGENTA CYAN WHITE; do
    eval PR_$color='%{$terminfo[bold]$fg[${(L)color}]%}'
    eval PR_LIGHT_$color='%{$fg[${(L)color}]%}'
    (( count = $count + 1 ))
done
PR_NO_COLOUR="%{$terminfo[sgr0]%}"


function precmd() {
  head_info=$(git symbolic-ref HEAD 2> /dev/null)
  rvm_prompt_info=$(~/.rvm/bin/rvm-prompt 2> /dev/null)
  rvm_flag=$rvm_prompt_info
  RPROMPT='$PR_RED$rvm_flag$PR_NO_COLOUR'
  if [[ $head_info =~ '^refs*' ]]; then
    branch_name=$head_info[(ws:/:)-1]
    output=$(git diff-files --exit-code --quiet)
    if [[ $? == 0 ]]; then
      PROMPT='%2~ $PR_RED$ZSH_THEME_GIT_PROMPT_PREFIX$PR_NO_COLOUR$PR_GREEN$branch_name$PR_NO_COLOUR$PR_RED$ZSH_THEME_GIT_PROMPT_SUFFIX$PR_NO_COLOUR$PR_CYAN>$PR_NO_COLOUR '
    else
      PROMPT='%2~ $PR_RED$ZSH_THEME_GIT_PROMPT_PREFIX$PR_NO_COLOUR$PR_GREEN$branch_name$PR_NO_COLOUR$PR_RED$ZSH_THEME_GIT_PROMPT_SUFFIX$PR_NO_COLOUR$PR_MAGENTA*$PR_NO_COLOUR '
    fi
  else
    PROMPT='%2~~>'
  fi
}


source $HOME/.aliasrc
#source "$HOME//src/dot_files/zshrc"
source "$HOME/.zsh.local"
source "$HOME/.zsh_profile.d/history.zsh"
source "$HOME/.zsh_profile.d/edit.zsh"
source "$HOME/.zsh_profile.d/utilities.zsh"
source "$HOME/.zsh_profile.d/completion.zsh"
source "$HOME/.zsh_profile.d/colors.zsh"

export PATH=/usr/local/bin:$PATH:$HOME/bin
[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm"
PATH=$PATH:$HOME/.rvm/bin
